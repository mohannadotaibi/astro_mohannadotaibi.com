---
import { Image } from 'astro:assets';
import getIcon from '../../utilities/getIcon';

export interface Props {
	title: string;
	url: string;
  arabic?: boolean;
}

const { title, url, arabic=false } = Astro.props;

let imagePath: any = await getIcon(url);
imagePath = imagePath?.replaceAll('\\','/').replaceAll('public', '');

const direction = arabic ? 'rtl' : 'ltr';

---
<a href={url} dir={direction} class="
  bg-slate-500 border-slate-200/10 border
  dark:bg-white/5
  hover:bg-blue-400 hover:z-10
  dark:hover:bg-blue-800
  rounded-md 
  ps-1 py-1 pe-2 
  hover:scale-110 transition-all 
  group">
  <div class="flex flex-row justify-start items-center">
    <Image 
      class="w-6 md:w-8 rounded-md me-4 aspect-square filter grayscale group-hover:grayscale-0 group-hover:filter-none" 
      height={64} 
      width={64} 
      format='png'
      src={imagePath} 
      alt={title} 
    />
    <h3 dir={direction} class="font-bold text text-slate-700 dark:text-slate-300">
      {title}
      {Astro.props.description && (
        <span class="ms-2 font-normal text-sm text-slate-500 dark:text-slate-400">{Astro.props.description}</span>
      )}
    </h3>
  </div>
  <div class="flex flex-row flex-wrap justify-end gap-1 mt-1">
    {Astro.props.tags && (
      Astro.props.tags.map((tag: string) => (
        <span class="font-normal px-1 inline-block rounded-md bg-slate-500 bg-opacity-10 border-opacity-10 text-xs text-slate-600 dark:text-slate-600 group-hover:bg-slate-500 group-hover:bg-opacity-10 group-hover:dark:text-slate-400">{tag}</span>
      ))
    )}
  </div>
</a>